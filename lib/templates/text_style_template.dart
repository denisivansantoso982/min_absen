import 'package:flutter/material.dart';
import 'package:min_absen/templates/colour_template.dart';

class TextStyleTemplate {
  static TextStyle mediumGray({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  }) {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.grayColour,
      fontWeight: FontWeight.w600,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle mediumWhite({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.whiteColour,
      fontWeight: FontWeight.w600,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle mediumPrimary({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.primaryColour,
      fontWeight: FontWeight.w600,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle mediumNegative({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.negativeColour,
      fontWeight: FontWeight.w600,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle boldGray({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.grayColour,
      fontWeight: FontWeight.bold,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle boldWhite({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.whiteColour,
      fontWeight: FontWeight.bold,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle boldPrimary({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.primaryColour,
      fontWeight: FontWeight.bold,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle boldNegative({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.negativeColour,
      fontWeight: FontWeight.bold,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle regularGray({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.grayColour,
      fontWeight: FontWeight.w400,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle regularWhite({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.whiteColour,
      fontWeight: FontWeight.w400,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle regularPrimary({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.primaryColour,
      fontWeight: FontWeight.w400,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle regularNegative({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.negativeColour,
      fontWeight: FontWeight.w400,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }
}
